<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
<context:component-scan base-package="com.itbank.mvc10"></context:component-scan>
	<!-- component = object = bean 다 똑같은 말 -->

<!-- annotation 방법 -->

<!-- xml 방법 -->

<!-- mybatis bean설정 -->
<bean id="myBatis" class="org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg ref="myConfig"></constructor-arg>
	<!-- <constructor-arg name="sqlSessionFactory" ref="config"></constructor-arg> -->
</bean>

<!-- config : mapper파일 관리, dbcp설정	/ DB별로 xml을 다 빼줄 것이다(member, bbs tables + 총괄 해주는 것 현재 총 3개, 파일이 많아서 설정파일만 하는 class를 만든 것과 같다 -->
<bean id="myConfig" class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	<property name="dataSource" ref="dbcp"></property>
</bean>

<!-- context.xml에 계속들어와서 만드는 것이 아니라 text를 받아서 설정할 수 있도록 해줌(실무에서 사용하는 방법) -->

<context:property-placeholder location="classpath:config/db.properties" />	<!-- 문서에 저장해놓은 것을 가져 오는 태그 -->
<!-- value값에 EL로 사용(''를 사용하지 않음) -->
<bean id="dbcp" class="org.apache.commons.dbcp.BasicDataSource">
	<property name="driverClassName" value="${jdbc.driver}"></property>
	<property name="url" value="${jdbc.url}"></property>
	<property name="username" value="${jdbc.user}"></property>
	<property name="password" value="${jdbc.pw}"></property>
	
</bean>




</beans>
